package com.greendao.manager;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.ventilator.administrator.DATAbase.greendao.TaskResEnity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TASK_RES_ENITY".
*/
public class TaskResEnityDao extends AbstractDao<TaskResEnity, Long> {

    public static final String TABLENAME = "TASK_RES_ENITY";

    /**
     * Properties of entity TaskResEnity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property TaskId = new Property(1, Long.class, "taskId", false, "TASK_ID");
        public final static Property Csff = new Property(2, String.class, "csff", false, "CSFF");
        public final static Property Tffs = new Property(3, String.class, "tffs", false, "TFFS");
        public final static Property SaveIndex = new Property(4, int.class, "saveIndex", false, "SAVE_INDEX");
        public final static Property SaveTime = new Property(5, String.class, "SaveTime", false, "SAVE_TIME");
        public final static Property MBhzqy = new Property(6, float.class, "mBhzqy", false, "M_BHZQY");
        public final static Property MWd = new Property(7, float.class, "mWd", false, "M_WD");
        public final static Property MKqmd = new Property(8, float.class, "mKqmd", false, "M_KQMD");
        public final static Property MDqy = new Property(9, float.class, "mDqy", false, "M_DQY");
        public final static Property MSd = new Property(10, double.class, "mSd", false, "M_SD");
        public final static Property MCfddy = new Property(11, float.class, "mCfddy", false, "M_CFDDY");
        public final static Property MPjfs = new Property(12, double.class, "mPjfs", false, "M_PJFS");
        public final static Property MFl = new Property(13, double.class, "mFl", false, "M_FL");
        public final static Property MCfmj = new Property(14, double.class, "mCfmj", false, "M_CFMJ");
        public final static Property MDy = new Property(15, float.class, "mDy", false, "M_DY");
        public final static Property MPtgxs = new Property(16, double.class, "mPtgxs", false, "M_PTGXS");
        public final static Property MCymjd = new Property(17, float.class, "mCymjd", false, "M_CYMJD");
        public final static Property MCymjx = new Property(18, float.class, "mCymjx", false, "M_CYMJX");
        public final static Property MJyc = new Property(19, float.class, "mJyc", false, "M_JYC");
        public final static Property MZgl1 = new Property(20, float.class, "mZgl1", false, "M_ZGL1");
        public final static Property MDjgl = new Property(21, float.class, "mDjgl", false, "M_DJGL");
        public final static Property MDjxl = new Property(22, float.class, "mDjxl", false, "M_DJXL");
        public final static Property MCdxl = new Property(23, float.class, "mCdxl", false, "M_CDXL");
        public final static Property MZgl2 = new Property(24, float.class, "mZgl2", false, "M_ZGL2");
        public final static Property MDjgl2 = new Property(25, float.class, "mDjgl2", false, "M_DJGL2");
        public final static Property MDjxl2 = new Property(26, float.class, "mDjxl2", false, "M_DJXL2");
        public final static Property MCdxl2 = new Property(27, float.class, "mCdxl2", false, "M_CDXL2");
        public final static Property MJygl = new Property(28, float.class, "mJygl", false, "M_JYGL");
        public final static Property MFjjy = new Property(29, double.class, "mFjjy", false, "M_FJJY");
        public final static Property MQygl = new Property(30, float.class, "mQygl", false, "M_QYGL");
        public final static Property MFjqy = new Property(31, double.class, "mFjqy", false, "M_FJQY");
        public final static Property MJyxl = new Property(32, float.class, "mJyxl", false, "M_JYXL");
        public final static Property MQyxl = new Property(33, float.class, "mQyxl", false, "M_QYXL");
        public final static Property MKsckmj = new Property(34, float.class, "mKsckmj", false, "M_KSCKMJ");
        public final static Property MJy = new Property(35, float.class, "mJy", false, "M_JY");
        public final static Property MKsckdy = new Property(36, float.class, "mKsckdy", false, "M_KSCKDY");
        public final static Property MFjyxxl = new Property(37, float.class, "mFjyxxl", false, "M_FJYXXL");
        public final static Property MGxnh = new Property(38, float.class, "mGxnh", false, "M_GXNH");
        public final static Property McKqmdzhxs = new Property(39, float.class, "mcKqmdzhxs", false, "MC_KQMDZHXS");
        public final static Property MSczs = new Property(40, int.class, "mSczs", false, "M_SCZS");
        public final static Property McZszhxs = new Property(41, float.class, "mcZszhxs", false, "MC_ZSZHXS");
        public final static Property MEdzs = new Property(42, int.class, "mEdzs", false, "M_EDZS");
        public final static Property MgFl = new Property(43, double.class, "mgFl", false, "MG_FL");
        public final static Property MgZgl1 = new Property(44, float.class, "mgZgl1", false, "MG_ZGL1");
        public final static Property MgZgl2 = new Property(45, float.class, "mgZgl2", false, "MG_ZGL2");
        public final static Property MgFjjy = new Property(46, float.class, "mgFjjy", false, "MG_FJJY");
        public final static Property MgJygl = new Property(47, float.class, "mgJygl", false, "MG_JYGL");
        public final static Property MgFjqy = new Property(48, float.class, "mgFjqy", false, "MG_FJQY");
        public final static Property MgQygl = new Property(49, float.class, "mgQygl", false, "MG_QYGL");
        public final static Property MgJyxl = new Property(50, float.class, "mgJyxl", false, "MG_JYXL");
        public final static Property MgQyxl = new Property(51, float.class, "mgQyxl", false, "MG_QYXL");
        public final static Property Ua = new Property(52, float.class, "Ua", false, "UA");
        public final static Property Ub = new Property(53, float.class, "Ub", false, "UB");
        public final static Property Uc = new Property(54, float.class, "Uc", false, "UC");
        public final static Property Uab = new Property(55, float.class, "Uab", false, "UAB");
        public final static Property Ia = new Property(56, float.class, "Ia", false, "IA");
        public final static Property Ubc = new Property(57, float.class, "Ubc", false, "UBC");
        public final static Property Ib = new Property(58, float.class, "Ib", false, "IB");
        public final static Property Uca = new Property(59, float.class, "Uca", false, "UCA");
        public final static Property Ic = new Property(60, float.class, "Ic", false, "IC");
        public final static Property PjU = new Property(61, float.class, "pjU", false, "PJ_U");
        public final static Property PjI = new Property(62, float.class, "pjI", false, "PJ_I");
        public final static Property Djgl = new Property(63, float.class, "djgl", false, "DJGL");
        public final static Property Zgl = new Property(64, float.class, "zgl", false, "ZGL");
        public final static Property Scgl = new Property(65, float.class, "scgl", false, "SCGL");
        public final static Property Djxl = new Property(66, float.class, "djxl", false, "DJXL");
        public final static Property Zhxl = new Property(67, float.class, "zhxl", false, "ZHXL");
        public final static Property Glys = new Property(68, float.class, "glys", false, "GLYS");
        public final static Property Fzxs = new Property(69, float.class, "fzxs", false, "FZXS");
        public final static Property Yxzt = new Property(70, float.class, "yxzt", false, "YXZT");
        public final static Property Stryxzt = new Property(71, String.class, "stryxzt", false, "STRYXZT");
        public final static Property Dj1qblc = new Property(72, String.class, "dj1qblc", false, "DJ1QBLC");
        public final static Property Dj1csff = new Property(73, String.class, "dj1csff", false, "DJ1CSFF");
        public final static Property Dj1cdxl = new Property(74, float.class, "dj1cdxl", false, "DJ1CDXL");
        public final static Property Ua2 = new Property(75, float.class, "Ua2", false, "UA2");
        public final static Property Ub2 = new Property(76, float.class, "Ub2", false, "UB2");
        public final static Property Uc2 = new Property(77, float.class, "Uc2", false, "UC2");
        public final static Property Uab2 = new Property(78, float.class, "Uab2", false, "UAB2");
        public final static Property Ia2 = new Property(79, float.class, "Ia2", false, "IA2");
        public final static Property Ubc2 = new Property(80, float.class, "Ubc2", false, "UBC2");
        public final static Property Ib2 = new Property(81, float.class, "Ib2", false, "IB2");
        public final static Property Uca2 = new Property(82, float.class, "Uca2", false, "UCA2");
        public final static Property Ic2 = new Property(83, float.class, "Ic2", false, "IC2");
        public final static Property PjU2 = new Property(84, float.class, "pjU2", false, "PJ_U2");
        public final static Property PjI2 = new Property(85, float.class, "pjI2", false, "PJ_I2");
        public final static Property Djgl2 = new Property(86, float.class, "djgl2", false, "DJGL2");
        public final static Property Zgl2 = new Property(87, float.class, "zgl2", false, "ZGL2");
        public final static Property Scgl2 = new Property(88, float.class, "scgl2", false, "SCGL2");
        public final static Property Djxl2 = new Property(89, float.class, "djxl2", false, "DJXL2");
        public final static Property Zhxl2 = new Property(90, float.class, "zhxl2", false, "ZHXL2");
        public final static Property Glys2 = new Property(91, float.class, "glys2", false, "GLYS2");
        public final static Property Fzxs2 = new Property(92, float.class, "fzxs2", false, "FZXS2");
        public final static Property Yxzt2 = new Property(93, float.class, "yxzt2", false, "YXZT2");
        public final static Property Stryxzt2 = new Property(94, String.class, "stryxzt2", false, "STRYXZT2");
        public final static Property Dj2qblc = new Property(95, String.class, "dj2qblc", false, "DJ2QBLC");
        public final static Property Dj2csff = new Property(96, String.class, "dj2csff", false, "DJ2CSFF");
        public final static Property Dj2cdxl = new Property(97, float.class, "dj2cdxl", false, "DJ2CDXL");
    }


    public TaskResEnityDao(DaoConfig config) {
        super(config);
    }
    
    public TaskResEnityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TASK_RES_ENITY\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"TASK_ID\" INTEGER," + // 1: taskId
                "\"CSFF\" TEXT," + // 2: csff
                "\"TFFS\" TEXT," + // 3: tffs
                "\"SAVE_INDEX\" INTEGER NOT NULL ," + // 4: saveIndex
                "\"SAVE_TIME\" TEXT," + // 5: SaveTime
                "\"M_BHZQY\" REAL NOT NULL ," + // 6: mBhzqy
                "\"M_WD\" REAL NOT NULL ," + // 7: mWd
                "\"M_KQMD\" REAL NOT NULL ," + // 8: mKqmd
                "\"M_DQY\" REAL NOT NULL ," + // 9: mDqy
                "\"M_SD\" REAL NOT NULL ," + // 10: mSd
                "\"M_CFDDY\" REAL NOT NULL ," + // 11: mCfddy
                "\"M_PJFS\" REAL NOT NULL ," + // 12: mPjfs
                "\"M_FL\" REAL NOT NULL ," + // 13: mFl
                "\"M_CFMJ\" REAL NOT NULL ," + // 14: mCfmj
                "\"M_DY\" REAL NOT NULL ," + // 15: mDy
                "\"M_PTGXS\" REAL NOT NULL ," + // 16: mPtgxs
                "\"M_CYMJD\" REAL NOT NULL ," + // 17: mCymjd
                "\"M_CYMJX\" REAL NOT NULL ," + // 18: mCymjx
                "\"M_JYC\" REAL NOT NULL ," + // 19: mJyc
                "\"M_ZGL1\" REAL NOT NULL ," + // 20: mZgl1
                "\"M_DJGL\" REAL NOT NULL ," + // 21: mDjgl
                "\"M_DJXL\" REAL NOT NULL ," + // 22: mDjxl
                "\"M_CDXL\" REAL NOT NULL ," + // 23: mCdxl
                "\"M_ZGL2\" REAL NOT NULL ," + // 24: mZgl2
                "\"M_DJGL2\" REAL NOT NULL ," + // 25: mDjgl2
                "\"M_DJXL2\" REAL NOT NULL ," + // 26: mDjxl2
                "\"M_CDXL2\" REAL NOT NULL ," + // 27: mCdxl2
                "\"M_JYGL\" REAL NOT NULL ," + // 28: mJygl
                "\"M_FJJY\" REAL NOT NULL ," + // 29: mFjjy
                "\"M_QYGL\" REAL NOT NULL ," + // 30: mQygl
                "\"M_FJQY\" REAL NOT NULL ," + // 31: mFjqy
                "\"M_JYXL\" REAL NOT NULL ," + // 32: mJyxl
                "\"M_QYXL\" REAL NOT NULL ," + // 33: mQyxl
                "\"M_KSCKMJ\" REAL NOT NULL ," + // 34: mKsckmj
                "\"M_JY\" REAL NOT NULL ," + // 35: mJy
                "\"M_KSCKDY\" REAL NOT NULL ," + // 36: mKsckdy
                "\"M_FJYXXL\" REAL NOT NULL ," + // 37: mFjyxxl
                "\"M_GXNH\" REAL NOT NULL ," + // 38: mGxnh
                "\"MC_KQMDZHXS\" REAL NOT NULL ," + // 39: mcKqmdzhxs
                "\"M_SCZS\" INTEGER NOT NULL ," + // 40: mSczs
                "\"MC_ZSZHXS\" REAL NOT NULL ," + // 41: mcZszhxs
                "\"M_EDZS\" INTEGER NOT NULL ," + // 42: mEdzs
                "\"MG_FL\" REAL NOT NULL ," + // 43: mgFl
                "\"MG_ZGL1\" REAL NOT NULL ," + // 44: mgZgl1
                "\"MG_ZGL2\" REAL NOT NULL ," + // 45: mgZgl2
                "\"MG_FJJY\" REAL NOT NULL ," + // 46: mgFjjy
                "\"MG_JYGL\" REAL NOT NULL ," + // 47: mgJygl
                "\"MG_FJQY\" REAL NOT NULL ," + // 48: mgFjqy
                "\"MG_QYGL\" REAL NOT NULL ," + // 49: mgQygl
                "\"MG_JYXL\" REAL NOT NULL ," + // 50: mgJyxl
                "\"MG_QYXL\" REAL NOT NULL ," + // 51: mgQyxl
                "\"UA\" REAL NOT NULL ," + // 52: Ua
                "\"UB\" REAL NOT NULL ," + // 53: Ub
                "\"UC\" REAL NOT NULL ," + // 54: Uc
                "\"UAB\" REAL NOT NULL ," + // 55: Uab
                "\"IA\" REAL NOT NULL ," + // 56: Ia
                "\"UBC\" REAL NOT NULL ," + // 57: Ubc
                "\"IB\" REAL NOT NULL ," + // 58: Ib
                "\"UCA\" REAL NOT NULL ," + // 59: Uca
                "\"IC\" REAL NOT NULL ," + // 60: Ic
                "\"PJ_U\" REAL NOT NULL ," + // 61: pjU
                "\"PJ_I\" REAL NOT NULL ," + // 62: pjI
                "\"DJGL\" REAL NOT NULL ," + // 63: djgl
                "\"ZGL\" REAL NOT NULL ," + // 64: zgl
                "\"SCGL\" REAL NOT NULL ," + // 65: scgl
                "\"DJXL\" REAL NOT NULL ," + // 66: djxl
                "\"ZHXL\" REAL NOT NULL ," + // 67: zhxl
                "\"GLYS\" REAL NOT NULL ," + // 68: glys
                "\"FZXS\" REAL NOT NULL ," + // 69: fzxs
                "\"YXZT\" REAL NOT NULL ," + // 70: yxzt
                "\"STRYXZT\" TEXT," + // 71: stryxzt
                "\"DJ1QBLC\" TEXT," + // 72: dj1qblc
                "\"DJ1CSFF\" TEXT," + // 73: dj1csff
                "\"DJ1CDXL\" REAL NOT NULL ," + // 74: dj1cdxl
                "\"UA2\" REAL NOT NULL ," + // 75: Ua2
                "\"UB2\" REAL NOT NULL ," + // 76: Ub2
                "\"UC2\" REAL NOT NULL ," + // 77: Uc2
                "\"UAB2\" REAL NOT NULL ," + // 78: Uab2
                "\"IA2\" REAL NOT NULL ," + // 79: Ia2
                "\"UBC2\" REAL NOT NULL ," + // 80: Ubc2
                "\"IB2\" REAL NOT NULL ," + // 81: Ib2
                "\"UCA2\" REAL NOT NULL ," + // 82: Uca2
                "\"IC2\" REAL NOT NULL ," + // 83: Ic2
                "\"PJ_U2\" REAL NOT NULL ," + // 84: pjU2
                "\"PJ_I2\" REAL NOT NULL ," + // 85: pjI2
                "\"DJGL2\" REAL NOT NULL ," + // 86: djgl2
                "\"ZGL2\" REAL NOT NULL ," + // 87: zgl2
                "\"SCGL2\" REAL NOT NULL ," + // 88: scgl2
                "\"DJXL2\" REAL NOT NULL ," + // 89: djxl2
                "\"ZHXL2\" REAL NOT NULL ," + // 90: zhxl2
                "\"GLYS2\" REAL NOT NULL ," + // 91: glys2
                "\"FZXS2\" REAL NOT NULL ," + // 92: fzxs2
                "\"YXZT2\" REAL NOT NULL ," + // 93: yxzt2
                "\"STRYXZT2\" TEXT," + // 94: stryxzt2
                "\"DJ2QBLC\" TEXT," + // 95: dj2qblc
                "\"DJ2CSFF\" TEXT," + // 96: dj2csff
                "\"DJ2CDXL\" REAL NOT NULL );"); // 97: dj2cdxl
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TASK_RES_ENITY\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TaskResEnity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Long taskId = entity.getTaskId();
        if (taskId != null) {
            stmt.bindLong(2, taskId);
        }
 
        String csff = entity.getCsff();
        if (csff != null) {
            stmt.bindString(3, csff);
        }
 
        String tffs = entity.getTffs();
        if (tffs != null) {
            stmt.bindString(4, tffs);
        }
        stmt.bindLong(5, entity.getSaveIndex());
 
        String SaveTime = entity.getSaveTime();
        if (SaveTime != null) {
            stmt.bindString(6, SaveTime);
        }
        stmt.bindDouble(7, entity.getMBhzqy());
        stmt.bindDouble(8, entity.getMWd());
        stmt.bindDouble(9, entity.getMKqmd());
        stmt.bindDouble(10, entity.getMDqy());
        stmt.bindDouble(11, entity.getMSd());
        stmt.bindDouble(12, entity.getMCfddy());
        stmt.bindDouble(13, entity.getMPjfs());
        stmt.bindDouble(14, entity.getMFl());
        stmt.bindDouble(15, entity.getMCfmj());
        stmt.bindDouble(16, entity.getMDy());
        stmt.bindDouble(17, entity.getMPtgxs());
        stmt.bindDouble(18, entity.getMCymjd());
        stmt.bindDouble(19, entity.getMCymjx());
        stmt.bindDouble(20, entity.getMJyc());
        stmt.bindDouble(21, entity.getMZgl1());
        stmt.bindDouble(22, entity.getMDjgl());
        stmt.bindDouble(23, entity.getMDjxl());
        stmt.bindDouble(24, entity.getMCdxl());
        stmt.bindDouble(25, entity.getMZgl2());
        stmt.bindDouble(26, entity.getMDjgl2());
        stmt.bindDouble(27, entity.getMDjxl2());
        stmt.bindDouble(28, entity.getMCdxl2());
        stmt.bindDouble(29, entity.getMJygl());
        stmt.bindDouble(30, entity.getMFjjy());
        stmt.bindDouble(31, entity.getMQygl());
        stmt.bindDouble(32, entity.getMFjqy());
        stmt.bindDouble(33, entity.getMJyxl());
        stmt.bindDouble(34, entity.getMQyxl());
        stmt.bindDouble(35, entity.getMKsckmj());
        stmt.bindDouble(36, entity.getMJy());
        stmt.bindDouble(37, entity.getMKsckdy());
        stmt.bindDouble(38, entity.getMFjyxxl());
        stmt.bindDouble(39, entity.getMGxnh());
        stmt.bindDouble(40, entity.getMcKqmdzhxs());
        stmt.bindLong(41, entity.getMSczs());
        stmt.bindDouble(42, entity.getMcZszhxs());
        stmt.bindLong(43, entity.getMEdzs());
        stmt.bindDouble(44, entity.getMgFl());
        stmt.bindDouble(45, entity.getMgZgl1());
        stmt.bindDouble(46, entity.getMgZgl2());
        stmt.bindDouble(47, entity.getMgFjjy());
        stmt.bindDouble(48, entity.getMgJygl());
        stmt.bindDouble(49, entity.getMgFjqy());
        stmt.bindDouble(50, entity.getMgQygl());
        stmt.bindDouble(51, entity.getMgJyxl());
        stmt.bindDouble(52, entity.getMgQyxl());
        stmt.bindDouble(53, entity.getUa());
        stmt.bindDouble(54, entity.getUb());
        stmt.bindDouble(55, entity.getUc());
        stmt.bindDouble(56, entity.getUab());
        stmt.bindDouble(57, entity.getIa());
        stmt.bindDouble(58, entity.getUbc());
        stmt.bindDouble(59, entity.getIb());
        stmt.bindDouble(60, entity.getUca());
        stmt.bindDouble(61, entity.getIc());
        stmt.bindDouble(62, entity.getPjU());
        stmt.bindDouble(63, entity.getPjI());
        stmt.bindDouble(64, entity.getDjgl());
        stmt.bindDouble(65, entity.getZgl());
        stmt.bindDouble(66, entity.getScgl());
        stmt.bindDouble(67, entity.getDjxl());
        stmt.bindDouble(68, entity.getZhxl());
        stmt.bindDouble(69, entity.getGlys());
        stmt.bindDouble(70, entity.getFzxs());
        stmt.bindDouble(71, entity.getYxzt());
 
        String stryxzt = entity.getStryxzt();
        if (stryxzt != null) {
            stmt.bindString(72, stryxzt);
        }
 
        String dj1qblc = entity.getDj1qblc();
        if (dj1qblc != null) {
            stmt.bindString(73, dj1qblc);
        }
 
        String dj1csff = entity.getDj1csff();
        if (dj1csff != null) {
            stmt.bindString(74, dj1csff);
        }
        stmt.bindDouble(75, entity.getDj1cdxl());
        stmt.bindDouble(76, entity.getUa2());
        stmt.bindDouble(77, entity.getUb2());
        stmt.bindDouble(78, entity.getUc2());
        stmt.bindDouble(79, entity.getUab2());
        stmt.bindDouble(80, entity.getIa2());
        stmt.bindDouble(81, entity.getUbc2());
        stmt.bindDouble(82, entity.getIb2());
        stmt.bindDouble(83, entity.getUca2());
        stmt.bindDouble(84, entity.getIc2());
        stmt.bindDouble(85, entity.getPjU2());
        stmt.bindDouble(86, entity.getPjI2());
        stmt.bindDouble(87, entity.getDjgl2());
        stmt.bindDouble(88, entity.getZgl2());
        stmt.bindDouble(89, entity.getScgl2());
        stmt.bindDouble(90, entity.getDjxl2());
        stmt.bindDouble(91, entity.getZhxl2());
        stmt.bindDouble(92, entity.getGlys2());
        stmt.bindDouble(93, entity.getFzxs2());
        stmt.bindDouble(94, entity.getYxzt2());
 
        String stryxzt2 = entity.getStryxzt2();
        if (stryxzt2 != null) {
            stmt.bindString(95, stryxzt2);
        }
 
        String dj2qblc = entity.getDj2qblc();
        if (dj2qblc != null) {
            stmt.bindString(96, dj2qblc);
        }
 
        String dj2csff = entity.getDj2csff();
        if (dj2csff != null) {
            stmt.bindString(97, dj2csff);
        }
        stmt.bindDouble(98, entity.getDj2cdxl());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TaskResEnity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Long taskId = entity.getTaskId();
        if (taskId != null) {
            stmt.bindLong(2, taskId);
        }
 
        String csff = entity.getCsff();
        if (csff != null) {
            stmt.bindString(3, csff);
        }
 
        String tffs = entity.getTffs();
        if (tffs != null) {
            stmt.bindString(4, tffs);
        }
        stmt.bindLong(5, entity.getSaveIndex());
 
        String SaveTime = entity.getSaveTime();
        if (SaveTime != null) {
            stmt.bindString(6, SaveTime);
        }
        stmt.bindDouble(7, entity.getMBhzqy());
        stmt.bindDouble(8, entity.getMWd());
        stmt.bindDouble(9, entity.getMKqmd());
        stmt.bindDouble(10, entity.getMDqy());
        stmt.bindDouble(11, entity.getMSd());
        stmt.bindDouble(12, entity.getMCfddy());
        stmt.bindDouble(13, entity.getMPjfs());
        stmt.bindDouble(14, entity.getMFl());
        stmt.bindDouble(15, entity.getMCfmj());
        stmt.bindDouble(16, entity.getMDy());
        stmt.bindDouble(17, entity.getMPtgxs());
        stmt.bindDouble(18, entity.getMCymjd());
        stmt.bindDouble(19, entity.getMCymjx());
        stmt.bindDouble(20, entity.getMJyc());
        stmt.bindDouble(21, entity.getMZgl1());
        stmt.bindDouble(22, entity.getMDjgl());
        stmt.bindDouble(23, entity.getMDjxl());
        stmt.bindDouble(24, entity.getMCdxl());
        stmt.bindDouble(25, entity.getMZgl2());
        stmt.bindDouble(26, entity.getMDjgl2());
        stmt.bindDouble(27, entity.getMDjxl2());
        stmt.bindDouble(28, entity.getMCdxl2());
        stmt.bindDouble(29, entity.getMJygl());
        stmt.bindDouble(30, entity.getMFjjy());
        stmt.bindDouble(31, entity.getMQygl());
        stmt.bindDouble(32, entity.getMFjqy());
        stmt.bindDouble(33, entity.getMJyxl());
        stmt.bindDouble(34, entity.getMQyxl());
        stmt.bindDouble(35, entity.getMKsckmj());
        stmt.bindDouble(36, entity.getMJy());
        stmt.bindDouble(37, entity.getMKsckdy());
        stmt.bindDouble(38, entity.getMFjyxxl());
        stmt.bindDouble(39, entity.getMGxnh());
        stmt.bindDouble(40, entity.getMcKqmdzhxs());
        stmt.bindLong(41, entity.getMSczs());
        stmt.bindDouble(42, entity.getMcZszhxs());
        stmt.bindLong(43, entity.getMEdzs());
        stmt.bindDouble(44, entity.getMgFl());
        stmt.bindDouble(45, entity.getMgZgl1());
        stmt.bindDouble(46, entity.getMgZgl2());
        stmt.bindDouble(47, entity.getMgFjjy());
        stmt.bindDouble(48, entity.getMgJygl());
        stmt.bindDouble(49, entity.getMgFjqy());
        stmt.bindDouble(50, entity.getMgQygl());
        stmt.bindDouble(51, entity.getMgJyxl());
        stmt.bindDouble(52, entity.getMgQyxl());
        stmt.bindDouble(53, entity.getUa());
        stmt.bindDouble(54, entity.getUb());
        stmt.bindDouble(55, entity.getUc());
        stmt.bindDouble(56, entity.getUab());
        stmt.bindDouble(57, entity.getIa());
        stmt.bindDouble(58, entity.getUbc());
        stmt.bindDouble(59, entity.getIb());
        stmt.bindDouble(60, entity.getUca());
        stmt.bindDouble(61, entity.getIc());
        stmt.bindDouble(62, entity.getPjU());
        stmt.bindDouble(63, entity.getPjI());
        stmt.bindDouble(64, entity.getDjgl());
        stmt.bindDouble(65, entity.getZgl());
        stmt.bindDouble(66, entity.getScgl());
        stmt.bindDouble(67, entity.getDjxl());
        stmt.bindDouble(68, entity.getZhxl());
        stmt.bindDouble(69, entity.getGlys());
        stmt.bindDouble(70, entity.getFzxs());
        stmt.bindDouble(71, entity.getYxzt());
 
        String stryxzt = entity.getStryxzt();
        if (stryxzt != null) {
            stmt.bindString(72, stryxzt);
        }
 
        String dj1qblc = entity.getDj1qblc();
        if (dj1qblc != null) {
            stmt.bindString(73, dj1qblc);
        }
 
        String dj1csff = entity.getDj1csff();
        if (dj1csff != null) {
            stmt.bindString(74, dj1csff);
        }
        stmt.bindDouble(75, entity.getDj1cdxl());
        stmt.bindDouble(76, entity.getUa2());
        stmt.bindDouble(77, entity.getUb2());
        stmt.bindDouble(78, entity.getUc2());
        stmt.bindDouble(79, entity.getUab2());
        stmt.bindDouble(80, entity.getIa2());
        stmt.bindDouble(81, entity.getUbc2());
        stmt.bindDouble(82, entity.getIb2());
        stmt.bindDouble(83, entity.getUca2());
        stmt.bindDouble(84, entity.getIc2());
        stmt.bindDouble(85, entity.getPjU2());
        stmt.bindDouble(86, entity.getPjI2());
        stmt.bindDouble(87, entity.getDjgl2());
        stmt.bindDouble(88, entity.getZgl2());
        stmt.bindDouble(89, entity.getScgl2());
        stmt.bindDouble(90, entity.getDjxl2());
        stmt.bindDouble(91, entity.getZhxl2());
        stmt.bindDouble(92, entity.getGlys2());
        stmt.bindDouble(93, entity.getFzxs2());
        stmt.bindDouble(94, entity.getYxzt2());
 
        String stryxzt2 = entity.getStryxzt2();
        if (stryxzt2 != null) {
            stmt.bindString(95, stryxzt2);
        }
 
        String dj2qblc = entity.getDj2qblc();
        if (dj2qblc != null) {
            stmt.bindString(96, dj2qblc);
        }
 
        String dj2csff = entity.getDj2csff();
        if (dj2csff != null) {
            stmt.bindString(97, dj2csff);
        }
        stmt.bindDouble(98, entity.getDj2cdxl());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public TaskResEnity readEntity(Cursor cursor, int offset) {
        TaskResEnity entity = new TaskResEnity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // taskId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // csff
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // tffs
            cursor.getInt(offset + 4), // saveIndex
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // SaveTime
            cursor.getFloat(offset + 6), // mBhzqy
            cursor.getFloat(offset + 7), // mWd
            cursor.getFloat(offset + 8), // mKqmd
            cursor.getFloat(offset + 9), // mDqy
            cursor.getDouble(offset + 10), // mSd
            cursor.getFloat(offset + 11), // mCfddy
            cursor.getDouble(offset + 12), // mPjfs
            cursor.getDouble(offset + 13), // mFl
            cursor.getDouble(offset + 14), // mCfmj
            cursor.getFloat(offset + 15), // mDy
            cursor.getDouble(offset + 16), // mPtgxs
            cursor.getFloat(offset + 17), // mCymjd
            cursor.getFloat(offset + 18), // mCymjx
            cursor.getFloat(offset + 19), // mJyc
            cursor.getFloat(offset + 20), // mZgl1
            cursor.getFloat(offset + 21), // mDjgl
            cursor.getFloat(offset + 22), // mDjxl
            cursor.getFloat(offset + 23), // mCdxl
            cursor.getFloat(offset + 24), // mZgl2
            cursor.getFloat(offset + 25), // mDjgl2
            cursor.getFloat(offset + 26), // mDjxl2
            cursor.getFloat(offset + 27), // mCdxl2
            cursor.getFloat(offset + 28), // mJygl
            cursor.getDouble(offset + 29), // mFjjy
            cursor.getFloat(offset + 30), // mQygl
            cursor.getDouble(offset + 31), // mFjqy
            cursor.getFloat(offset + 32), // mJyxl
            cursor.getFloat(offset + 33), // mQyxl
            cursor.getFloat(offset + 34), // mKsckmj
            cursor.getFloat(offset + 35), // mJy
            cursor.getFloat(offset + 36), // mKsckdy
            cursor.getFloat(offset + 37), // mFjyxxl
            cursor.getFloat(offset + 38), // mGxnh
            cursor.getFloat(offset + 39), // mcKqmdzhxs
            cursor.getInt(offset + 40), // mSczs
            cursor.getFloat(offset + 41), // mcZszhxs
            cursor.getInt(offset + 42), // mEdzs
            cursor.getDouble(offset + 43), // mgFl
            cursor.getFloat(offset + 44), // mgZgl1
            cursor.getFloat(offset + 45), // mgZgl2
            cursor.getFloat(offset + 46), // mgFjjy
            cursor.getFloat(offset + 47), // mgJygl
            cursor.getFloat(offset + 48), // mgFjqy
            cursor.getFloat(offset + 49), // mgQygl
            cursor.getFloat(offset + 50), // mgJyxl
            cursor.getFloat(offset + 51), // mgQyxl
            cursor.getFloat(offset + 52), // Ua
            cursor.getFloat(offset + 53), // Ub
            cursor.getFloat(offset + 54), // Uc
            cursor.getFloat(offset + 55), // Uab
            cursor.getFloat(offset + 56), // Ia
            cursor.getFloat(offset + 57), // Ubc
            cursor.getFloat(offset + 58), // Ib
            cursor.getFloat(offset + 59), // Uca
            cursor.getFloat(offset + 60), // Ic
            cursor.getFloat(offset + 61), // pjU
            cursor.getFloat(offset + 62), // pjI
            cursor.getFloat(offset + 63), // djgl
            cursor.getFloat(offset + 64), // zgl
            cursor.getFloat(offset + 65), // scgl
            cursor.getFloat(offset + 66), // djxl
            cursor.getFloat(offset + 67), // zhxl
            cursor.getFloat(offset + 68), // glys
            cursor.getFloat(offset + 69), // fzxs
            cursor.getFloat(offset + 70), // yxzt
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // stryxzt
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // dj1qblc
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // dj1csff
            cursor.getFloat(offset + 74), // dj1cdxl
            cursor.getFloat(offset + 75), // Ua2
            cursor.getFloat(offset + 76), // Ub2
            cursor.getFloat(offset + 77), // Uc2
            cursor.getFloat(offset + 78), // Uab2
            cursor.getFloat(offset + 79), // Ia2
            cursor.getFloat(offset + 80), // Ubc2
            cursor.getFloat(offset + 81), // Ib2
            cursor.getFloat(offset + 82), // Uca2
            cursor.getFloat(offset + 83), // Ic2
            cursor.getFloat(offset + 84), // pjU2
            cursor.getFloat(offset + 85), // pjI2
            cursor.getFloat(offset + 86), // djgl2
            cursor.getFloat(offset + 87), // zgl2
            cursor.getFloat(offset + 88), // scgl2
            cursor.getFloat(offset + 89), // djxl2
            cursor.getFloat(offset + 90), // zhxl2
            cursor.getFloat(offset + 91), // glys2
            cursor.getFloat(offset + 92), // fzxs2
            cursor.getFloat(offset + 93), // yxzt2
            cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94), // stryxzt2
            cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95), // dj2qblc
            cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96), // dj2csff
            cursor.getFloat(offset + 97) // dj2cdxl
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TaskResEnity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setTaskId(cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1));
        entity.setCsff(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTffs(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setSaveIndex(cursor.getInt(offset + 4));
        entity.setSaveTime(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setMBhzqy(cursor.getFloat(offset + 6));
        entity.setMWd(cursor.getFloat(offset + 7));
        entity.setMKqmd(cursor.getFloat(offset + 8));
        entity.setMDqy(cursor.getFloat(offset + 9));
        entity.setMSd(cursor.getDouble(offset + 10));
        entity.setMCfddy(cursor.getFloat(offset + 11));
        entity.setMPjfs(cursor.getDouble(offset + 12));
        entity.setMFl(cursor.getDouble(offset + 13));
        entity.setMCfmj(cursor.getDouble(offset + 14));
        entity.setMDy(cursor.getFloat(offset + 15));
        entity.setMPtgxs(cursor.getDouble(offset + 16));
        entity.setMCymjd(cursor.getFloat(offset + 17));
        entity.setMCymjx(cursor.getFloat(offset + 18));
        entity.setMJyc(cursor.getFloat(offset + 19));
        entity.setMZgl1(cursor.getFloat(offset + 20));
        entity.setMDjgl(cursor.getFloat(offset + 21));
        entity.setMDjxl(cursor.getFloat(offset + 22));
        entity.setMCdxl(cursor.getFloat(offset + 23));
        entity.setMZgl2(cursor.getFloat(offset + 24));
        entity.setMDjgl2(cursor.getFloat(offset + 25));
        entity.setMDjxl2(cursor.getFloat(offset + 26));
        entity.setMCdxl2(cursor.getFloat(offset + 27));
        entity.setMJygl(cursor.getFloat(offset + 28));
        entity.setMFjjy(cursor.getDouble(offset + 29));
        entity.setMQygl(cursor.getFloat(offset + 30));
        entity.setMFjqy(cursor.getDouble(offset + 31));
        entity.setMJyxl(cursor.getFloat(offset + 32));
        entity.setMQyxl(cursor.getFloat(offset + 33));
        entity.setMKsckmj(cursor.getFloat(offset + 34));
        entity.setMJy(cursor.getFloat(offset + 35));
        entity.setMKsckdy(cursor.getFloat(offset + 36));
        entity.setMFjyxxl(cursor.getFloat(offset + 37));
        entity.setMGxnh(cursor.getFloat(offset + 38));
        entity.setMcKqmdzhxs(cursor.getFloat(offset + 39));
        entity.setMSczs(cursor.getInt(offset + 40));
        entity.setMcZszhxs(cursor.getFloat(offset + 41));
        entity.setMEdzs(cursor.getInt(offset + 42));
        entity.setMgFl(cursor.getDouble(offset + 43));
        entity.setMgZgl1(cursor.getFloat(offset + 44));
        entity.setMgZgl2(cursor.getFloat(offset + 45));
        entity.setMgFjjy(cursor.getFloat(offset + 46));
        entity.setMgJygl(cursor.getFloat(offset + 47));
        entity.setMgFjqy(cursor.getFloat(offset + 48));
        entity.setMgQygl(cursor.getFloat(offset + 49));
        entity.setMgJyxl(cursor.getFloat(offset + 50));
        entity.setMgQyxl(cursor.getFloat(offset + 51));
        entity.setUa(cursor.getFloat(offset + 52));
        entity.setUb(cursor.getFloat(offset + 53));
        entity.setUc(cursor.getFloat(offset + 54));
        entity.setUab(cursor.getFloat(offset + 55));
        entity.setIa(cursor.getFloat(offset + 56));
        entity.setUbc(cursor.getFloat(offset + 57));
        entity.setIb(cursor.getFloat(offset + 58));
        entity.setUca(cursor.getFloat(offset + 59));
        entity.setIc(cursor.getFloat(offset + 60));
        entity.setPjU(cursor.getFloat(offset + 61));
        entity.setPjI(cursor.getFloat(offset + 62));
        entity.setDjgl(cursor.getFloat(offset + 63));
        entity.setZgl(cursor.getFloat(offset + 64));
        entity.setScgl(cursor.getFloat(offset + 65));
        entity.setDjxl(cursor.getFloat(offset + 66));
        entity.setZhxl(cursor.getFloat(offset + 67));
        entity.setGlys(cursor.getFloat(offset + 68));
        entity.setFzxs(cursor.getFloat(offset + 69));
        entity.setYxzt(cursor.getFloat(offset + 70));
        entity.setStryxzt(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setDj1qblc(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setDj1csff(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setDj1cdxl(cursor.getFloat(offset + 74));
        entity.setUa2(cursor.getFloat(offset + 75));
        entity.setUb2(cursor.getFloat(offset + 76));
        entity.setUc2(cursor.getFloat(offset + 77));
        entity.setUab2(cursor.getFloat(offset + 78));
        entity.setIa2(cursor.getFloat(offset + 79));
        entity.setUbc2(cursor.getFloat(offset + 80));
        entity.setIb2(cursor.getFloat(offset + 81));
        entity.setUca2(cursor.getFloat(offset + 82));
        entity.setIc2(cursor.getFloat(offset + 83));
        entity.setPjU2(cursor.getFloat(offset + 84));
        entity.setPjI2(cursor.getFloat(offset + 85));
        entity.setDjgl2(cursor.getFloat(offset + 86));
        entity.setZgl2(cursor.getFloat(offset + 87));
        entity.setScgl2(cursor.getFloat(offset + 88));
        entity.setDjxl2(cursor.getFloat(offset + 89));
        entity.setZhxl2(cursor.getFloat(offset + 90));
        entity.setGlys2(cursor.getFloat(offset + 91));
        entity.setFzxs2(cursor.getFloat(offset + 92));
        entity.setYxzt2(cursor.getFloat(offset + 93));
        entity.setStryxzt2(cursor.isNull(offset + 94) ? null : cursor.getString(offset + 94));
        entity.setDj2qblc(cursor.isNull(offset + 95) ? null : cursor.getString(offset + 95));
        entity.setDj2csff(cursor.isNull(offset + 96) ? null : cursor.getString(offset + 96));
        entity.setDj2cdxl(cursor.getFloat(offset + 97));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(TaskResEnity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(TaskResEnity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(TaskResEnity entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
